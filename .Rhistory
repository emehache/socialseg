input
roxygen2::roxygenise()
data(input)
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
lx <- 100
st_make_grid(input)
st_make_grid(input, cellsize = c(lx, lx))
lx <- 100
st_make_grid(input, cellsize = c(lx, lx))
st_make_grid(input, cellsize = c(lx, lx), offset = c(lx, lx))
st_make_grid(input, cellsize = c(lx, lx), offset = c(1,1))
lx <- 100
st_make_grid(input, cellsize = c(lx, lx))
st_make_grid(input, cellsize = c(lx, lx), offset = c(1,1))
?st_make_grid
st_make_grid(input, cellsize = c(lx, lx))
st_make_grid(input, cellsize = c(lx, lx)) %>%
st_coordinates()
st_make_grid(input, cellsize = c(lx, lx)) %>%
st_centroids() %>%
st_coordinates()
st_make_grid(input, cellsize = c(lx, lx)) %>%
st_centroids()
st_make_grid(input, cellsize = c(lx, lx)) %>%
st_centroid()
st_make_grid(input, cellsize = c(lx, lx)) %>%
st_centroid() %>%
st_coordinates()
st_bbox(input)
st_make_grid
roxygen2::roxygenise()
?help environment
?help environments
?environments
roxygen2::roxygenise()
distribuido <- input %>%
distribute(lx = lx, vars = vars)
distribuido$values$H
suavizado$values$H
suavizado <- smoothgrid(distribuido, sigma = 200)
roxygen2::roxygenise()
distribuido$values$H
suavizado$values$H
entornos <- environments(suavizado, gamma = 500)
roxygen2::roxygenise()
entornos <- environments(suavizado, gamma = 500)
roxygen2::roxygenise()
entornos <- environments(suavizado, gamma = 500)
#' Distribute the data
#'
#' This function ...
#'
#' @param input Path to the input file
#' @return gridmap
#' @export
#'
environments <- function(gridmap, gamma, nucleo = "quartic") {
grid <- gridmap$grid
original <- st_drop_geometry(grid)
envir <- gridmap$grid
matriz <- gridmap$distances
vars <- setdiff(names(grid), c("geom", "id", "i"))
if (nucleo == "quartic") {
ker <- cvmgof::kernel.function.quart(matriz/gamma) %>%
Matrix::Matrix(sparse = T)
ker <- apply(ker, 1, \(x) x/sum(x)) %>% t
}
if (nucleo == "uniforme") {
ker <- matriz<=gamma
ker <- apply(ker, 1, \(x) x/sum(x)) %>% t
}
smoothed <- copy(original) %>%
.[, (vars) := lapply(.SD, \(x) crossprod(ker, x)), .SDcols = vars] %>%
.[]
envir <- envir %>%
as.data.table %>%
.[, (vars) := smoothed[,vars, with = F]] %>%
.[] %>%
st_as_sf()
tol <- .Machine$double.eps
dd <- grid %>%
as.data.table %>%
.[, vars, with = F]
ee <- smoothed[, vars, with = F]
dd <- dd + tol
ee <- ee + tol
dd <- na.omit(dd)
ee <- na.omit(ee)
M <- ncol(dd)
tot <- sum(dd)
tot_p <- rowSums(dd)
tot_m <- colSums(dd)
pi_m <- tot_m/tot
pi_pm <- ee/rowSums(ee)
ent_p <- rowSums(-(dd/rowSums(dd))*log((dd/rowSums(dd)), base = M))
Ep <- rowSums(-pi_pm*log(pi_pm, base = M))
E <- -sum(pi_m * log(pi_m, base = M))
H <- 1 - (sum(tot_p * Ep) / (tot * E))
values <- list(H = H, tot = tot, E = E, tot_p = tot_p, ent_p = ent_p)
output <- list(grid = grid, environments = envir, input = input, distances = distances, values = values)
class(output) <- "environmentmap"
return(output)
}
entornos <- environments(suavizado, gamma = 500)
suavizado
suavizado$grid
suavizado$grid %>% names
roxygen2::roxygenise()
rm("environments")
roxygen2::roxygenise()
entornos <- environments(suavizado, gamma = 500)
smoothgrid(distribuido, sigma = 200)
entornos <- environments(suavizado, gamma = 500, vars = vars)
roxygen2::roxygenise()
entornos <- environments(suavizado, gamma = 500, vars = vars)
roxygen2::roxygenise()
entornos <- environments(suavizado, gamma = 500, vars = vars)
gridmap <- distribuido
grid <- gridmap$grid
original <- st_drop_geometry(grid)
envir <- gridmap$grid
matriz <- gridmap$distances
vars
ker <- cvmgof::kernel.function.quart(matriz/gamma) %>%
Matrix::Matrix(sparse = T)
gamma <- 500
ker <- cvmgof::kernel.function.quart(matriz/gamma) %>%
Matrix::Matrix(sparse = T)
ker <- apply(ker, 1, \(x) x/sum(x)) %>% t
smoothed <- copy(original) %>%
.[, (vars) := lapply(.SD, \(x) crossprod(ker, x)), .SDcols = vars] %>%
.[]
envir <- envir %>%
as.data.table %>%
.[, (vars) := smoothed[,vars, with = F]] %>%
.[] %>%
st_as_sf()
tol <- .Machine$double.eps
dd <- grid %>%
as.data.table %>%
.[, vars, with = F]
ee <- smoothed[, vars, with = F]
dd <- dd + tol
ee <- ee + tol
dd <- na.omit(dd)
ee <- na.omit(ee)
M <- ncol(dd)
tot <- sum(dd)
tot_p <- rowSums(dd)
tot_m <- colSums(dd)
pi_m <- tot_m/tot
pi_pm <- ee/rowSums(ee)
ent_p <- rowSums(-(dd/rowSums(dd))*log((dd/rowSums(dd)), base = M))
Ep <- rowSums(-pi_pm*log(pi_pm, base = M))
E <- -sum(pi_m * log(pi_m, base = M))
H <- 1 - (sum(tot_p * Ep) / (tot * E))
values <- list(H = H, tot = tot, E = E, tot_p = tot_p, ent_p = ent_p)
output <- list(grid = grid, environments = envir, input = input, distances = distances, values = values)
roxygen2::roxygenise()
entornos <- environments(suavizado, gamma = 500, vars = vars)
suavizado
suavizado$grid
suavizado$grid %>% names
entornos <- environments(suavizado, gamma = 500, vars = vars)
smoothgrid(distribuido, sigma = 200)
copy(original)
copy(original) %>%
.[, (vars) := lapply(.SD, \(x) crossprod(ker, x)), .SDcols = vars] %>%
.[]
copy(original) %>%
.[, (vars) := lapply(.SD, \(x) crossprod(ker, x)), .SDcols = vars] %>%
.[]
copy(original)
copy(original) %>%
.[, (vars) := lapply(.SD, \(x) crossprod(ker, x)), .SDcols = vars] %>%
.[]
roxygen2::roxygenise()
suavizado <- smoothgrid(distribuido, sigma = 200)
entornos <- environments(suavizado, gamma = 500, vars = vars)
suavizado$grid
roxygen2::roxygenise()
entornos <- environments(suavizado, gamma = 500, vars = vars)
roxygen2::roxygenise()
environments(suavizado, gamma = 500, vars = vars)
roxygen2::roxygenise()
environments(suavizado, gamma = 500, vars = vars)
smoothgrid(distribuido, sigma = 200)
environments(distribuido, gamma = 500, vars = vars)
distribuido
suavizado <- smoothgrid(distribuido, sigma = 200)
environments(distribuido, gamma = 500, vars = vars)
environments(suavizado, gamma = 500, vars = vars)
roxygen2::roxygenise()
suavizado <- smoothgrid(distribuido, sigma = 200)
plot(suavizado, var = vars[1])
suavizado
entornos <- environments(suavizado, gamma = 500, vars = vars)
entornos <- environments(distribuido, gamma = 500, vars = vars)
entornos
entornos$values$H
entornos <- environments(distribuido, gamma = 5000, vars = vars)
entornos$values$H
entornos <- environments(distribuido, gamma = 500, vars = vars)
distribuido$values$H
suavizado$values$H
entornos$values$H
gridmap <- suavizado
grid <- gridmap$grid
original <- st_drop_geometry(grid)
gamma
envir <- gridmap$grid
envir
matriz <- gridmap$distances
vars
ker <- cvmgof::kernel.function.quart(matriz/gamma) %>%
Matrix::Matrix(sparse = T)
ker <- apply(ker, 1, \(x) x/sum(x)) %>% t
smoothed <- copy(original) %>%
.[, (vars) := lapply(.SD, \(x) crossprod(ker, x)), .SDcols = vars] %>%
.[]
copy(original)
copy(original)
copy(original)
copy(original)[, vars, with = F]
copy(original)[, vars, with = F]
sapply(copy(original)[, vars, with = F], \(x) crossprod(ker, x))
sapply(copy(original)[, vars, with = F], \(x) crossprod(ker, x)) %>% t
sapply(copy(original)[, vars, with = F], \(x) crossprod(ker, x) %>% t)
apply(copy(original)[, vars, with = F], 1, \(x) crossprod(ker, x))
apply(copy(original)[, vars, with = F], 2, \(x) crossprod(ker, x))
copy(original)[, vars, with = F]
crossprod(ker, copy(original)[, vars, with = F])
crossprod(ker, as.matrix(copy(original)[, vars, with = F]))
as.matrix(copy(original)[, vars, with = F])
crossprod(ker, as.matrix(copy(original)[, vars, with = F]))
ker
ker <- cvmgof::kernel.function.quart(matriz/gamma) %>%
Matrix::Matrix(sparse = T)
ker <- apply(ker, 1, \(x) x/sum(x)) %>% t
ker
matriz
matriz <- gridmap$distances
matriz
suavizado
suavizado$distances
distribuido$distances
roxygen2::roxygenise()
suavizado <- smoothgrid(distribuido, sigma = 200)
suavizado$distances
gridmap <- suavizado
grid <- gridmap$grid
original <- st_drop_geometry(grid)
envir <- gridmap$grid
matriz <- gridmap$distances
matriz
ker <- cvmgof::kernel.function.quart(matriz/gamma) %>%
Matrix::Matrix(sparse = T)
ker <- apply(ker, 1, \(x) x/sum(x)) %>% t
roxygen2::roxygenise()
suavizado <- smoothgrid(distribuido, sigma = 200)
entornos <- environments(distribuido, gamma = 500, vars = vars)
distribuido$values$H
suavizado$values$H
entornos$values$H
entornos <- environments(suavizado, gamma = 500, vars = vars)
distribuido$values$H
suavizado$values$H
entornos$values$H
roxygen2::roxygenise()
data(input)
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
lx <- 100
distribuido <- input %>%
distribute(lx = lx, vars = vars)
distribuido
plot(distribuido, var = vars[1])
distribuido
gridmap
distribuido
str(distribuido)
plot(distribuido, var = vars[1])
distribuido$values$H
suavizado$values$H
suavizado <- smoothgrid(distribuido, sigma = 200)
entornos <- environments(suavizado, gamma = 500, vars = vars)
distribuido$values$H
suavizado$values$H
entornos$values$H
entornos <- environments(suavizado, gamma = 500, vars = vars)
entornos
roxygen2::roxygenise()
Hp <- tot_p*(E-Ep)/tot/E
roxygen2::roxygenise()
entornos <- environments(suavizado, gamma = 500, vars = vars)
roxygen2::roxygenise()
entornos <- environments(suavizado, gamma = 500, vars = vars)
distribuido$values$H
suavizado$values$H
entornos$values$H
entornos$environments
entornos
roxygen2::roxygenise()
entornos$values$H
entornos <- environments(suavizado, gamma = 500, vars = vars)
plot(entornos, var = "Hp")
plot(entornos, var = "nivel_edu_alto")
roxygen2::roxygenise()
plot(entornos, var = "nivel_edu_alto")
plot(entornos, var = "Hp")
scale_fill_gradient
continuous_scale
ggproto
roxygen2::roxygenise()
entornos <- environments(suavizado, gamma = 500, vars = vars)
plot(entornos, var = "Hp")
plot(distribuido, var = vars[1])
roxygen2::roxygenise()
roxygen2::roxygenise()
plot(entornos, var = "Hp")
entornos$environments
entornos$environments
roxygen2::roxygenise()
plot(entornos, var = "Hp")
roxygen2::roxygenise()
plot(entornos, var = "Hp")
roxygen2::roxygenise()
plot(entornos, var = "Hp")
entornos
entornos$environments
entornos$grid <- entornos$environments
entornos$environments
entornos$environments <- NULL
class(entornos) <- "gridmap"
class(distribuido)
View(distribuido)
View(suavizado)
View(suavizado)
View(entornos)
entornos <- environments(suavizado, gamma = 500, vars = vars)
roxygen2::roxygenise()
suavizado <- smoothgrid(distribuido, sigma = 200)
entornos <- environments(suavizado, gamma = 500, vars = vars)
distribuido$values$H
suavizado$values$H
entornos$values$H
plot(entornos, var = "Hp")
roxygen2::roxygenise()
plot(entornos, var = "Hp")
roxygen2::roxygenise()
plot(entornos, var = "Hp")
roxygen2::roxygenise()
plot(entornos, var = "Hp")
roxygen2::roxygenise()
plot(entornos, var = "Hp")
roxygen2::roxygenise()
roxygen2::roxygenise()
plot(entornos, var = "Hp")
plot(suavizado, var = vars[1])
roxygen2::roxygenise()
plot(suavizado, var = vars[1])
plot(entornos, var = "Hp")
roxygen2::roxygenise()
plot(entornos, var = "Hp")
plot(suavizado, var = vars[1])
roxygen2::roxygenise()
plot(suavizado, var = vars[1])
plot(entornos, var = "Hp")
roxygen2::roxygenise()
plot(entornos, var = "Hp")
plot(entornos, var = "Hp")
plot(suavizado, var = vars[1])
roxygen2::roxygenise()
plot(suavizado, var = vars[1])
plot(entornos, var = "Hp")
roxygen2::roxygenise()
plot(suavizado, var = vars[1])
roxygen2::roxygenise()
plot(entornos, var = "Hp")
roxygen2::roxygenise()
plot(entornos, var = "Hp")
plot(suavizado, var = vars[1])
roxygen2::roxygenise()
plot(suavizado, var = vars[1])
plot(entornos, var = "Hp")
roxygen2::roxygenise()
data(input)
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
distribuido <- input %>%
distribute(lx = 100, vars = vars)
roxygen2::roxygenise()
data(input)
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
distribuido <- input %>%
distribute(lx = 100, vars = vars)
plot(distribuido, var = vars[1])
suavizado <- smoothgrid(distribuido, sigma = 200)
plot(suavizado, var = vars[1])
entornos <- environments(suavizado, gamma = 500, vars = vars)
plot(entornos, var = "Hp")
entornos
distribuido$values$H
suavizado$values$H
entornos$values$H
roxygen2::roxygenise()
distribuido$values$H
suavizado$values$H
entornos$values$H
coef(distribuido)
coef(distribuido)
coef(distribuido)
entornos$values$H
coef(entornos)
roxygen2::roxygenise()
coef(distribuido)
coef(distribuido)
c(a = 2)
roxygen2::roxygenise()
coef(distribuido)
coef(entornos)
roxygen2::roxygenise()
coef(entornos)
coef(suavizado)
coef(entornos)
roxygen2::roxygenise()
coef(distribuido)
coef(suavizado)
coef(entornos)
roxygen2::roxygenise()
coef(entornos)
coef(suavizado)
roxygen2::roxygenise()
coef(entornos)
coef(suavizado)
roxygen2::roxygenise()
coef(entornos)
coef(suavizado)
exists(gamma)
exists("gamma")
gamma
exists("gamma", mode = "numeric")
roxygen2::roxygenise()
coef(entornos)
coef(suavizado)
?exists
roxygen2::roxygenise()
coef(suavizado)
roxygen2::roxygenise()
coef(suavizado)
roxygen2::roxygenise()
coef(suavizado)
roxygen2::roxygenise()
coef(suavizado)
pos.to.env(-1L)
if (exists("gamma", envir = "gridmap")) print("Entornos construidos con gamma = ", gamma)
pos.to.env(-1L)
?pos.to.env
roxygen2::roxygenise()
coef(suavizado)
roxygen2::roxygenise()
coef(suavizado)
coef(suavizado)
names(entornos)
entornos <- environments(suavizado, gamma = 500, vars = vars)
names(entornos)
coef(distribuido)
coef(suavizado)
coef(entornos)
roxygen2::roxygenise()
coef(entornos)
coef(entornos)
coef(suavizado)
entornos
entornos[["gamma"]]
roxygen2::roxygenise()
coef(suavizado)
roxygen2::roxygenise()
roxygen2::roxygenise()
coef(suavizado)
coef(entornos)
roxygen2::roxygenise()
coef(entornos)
coef(suavizado)
roxygen2::roxygenise()
coef(suavizado)
coef(entornos)
roxygen2::roxygenise()
coef(entornos)
roxygen2::roxygenise()
roxygen2::roxygenise()
