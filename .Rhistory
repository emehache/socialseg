reduce(simulaciones, "cbind")
Reduce(simulaciones, "cbind")
?Reduce(simulaciones, "cbind")
Reduce("cbind", simulaciones)
simulaciones <- Reduce("cbind", simulaciones)
gridmap$distances
matriz <- gridmap$distances
ker <- cvmgof::kernel.function.quart(matriz/gamma) %>%
Matrix::Matrix(sparse = T)
matriz
gamma
gamma <- 150
gamma <- 200
ker <- cvmgof::kernel.function.quart(matriz/gamma) %>%
Matrix::Matrix(sparse = T)
ker <- apply(ker, 1, \(x) x/sum(x)) %>% t
crossprod(ker, simulaciones)
roxygen2::roxygenise()
grid_gamma <- seq(lx, 3000, length.out = 5)
lx <- 100
grid_gamma <- seq(lx, 3000, length.out = 5)
data(input)
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
lx <- 100
distribuido <- input %>%
distribute(lx = lx, vars = vars)
plot(distribuido, var = vars[1])
suavizado <- smoothgrid(distribuido, sigma = 200)
plot(suavizado, var = vars[1])
entornos <- environments(suavizado, gamma = 500, vars = vars)
plot(entornos, var = "Hp")
coef(distribuido)
coef(suavizado)
coef(entornos)
lx <- 100
grid_gamma <- seq(lx, 3000, length.out = 5)
roxygen2::roxygenise()
lx <- 100
grid_gamma <- seq(lx, 3000, length.out = 5)
seg_profile2(distribuido, grid_gamma = grid_gamma)
segprofile <- seg_profile2(distribuido, grid_gamma = grid_gamma)
lx <- 100
grid_gamma <- seq(lx, 3000, length.out = 21)
segprofile <- seg_profile2(distribuido, grid_gamma = grid_gamma)
segprofile
matplot(x = grid_gamma, segprofile, lty = 1, type = "o", pch = 20)
grid_gamma <- seq(lx, 1000, length.out = 15)
segprofile <- seg_profile2(distribuido, grid_gamma = grid_gamma)
matplot(x = grid_gamma, segprofile, lty = 1, type = "o", pch = 20)
roxygen2::roxygenise()
lx <- 100
grid_gamma <- seq(lx, 2500, length.out = 15)
segprofile <- seg_profile2(suavizado, grid_gamma = grid_gamma)
matplot(x = grid_gamma, segprofile, lty = 1, type = "o", pch = 20)
abline(h = 0, col = "grey")
roxygen2::roxygenise()
data(input)
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
lx <- 100
distribuido <- input %>%
distribute(lx = lx, vars = vars)
plot(distribuido, var = vars[1])
suavizado <- smoothgrid(distribuido, sigma = 200)
plot(suavizado, var = vars[1])
entornos <- environments(suavizado, gamma = 500, vars = vars)
plot(entornos, var = "Hp")
entornos
distribuido
distribuido$sigma
()
roxygen2::roxygenise()
matplot(x = grid_gamma, segprofile, lty = 1, type = "o", pch = 20)
roxygen2::roxygenise()
segprofile2 <- seg_profile2(suavizado, grid_gamma = grid_gamma)
matplot(x = grid_gamma, segprofile2, lty = 1, type = "o", pch = 20)
abline(h = 0, col = "grey")
grid_gamma <- c(1, seq(lx, 2500, length.out = 15))
segprofile2 <- seg_profile2(suavizado, grid_gamma = grid_gamma)
matplot(x = grid_gamma, segprofile2, lty = 1, type = "o", pch = 20)
abline(h = 0, col = "grey")
segprofile2
grid_gamma <- seq(lx, 2500, length.out = 15)
segprofile2
segprofile2[-1,]
matplot(x = grid_gamma, segprofile2[-1,], lty = 1, type = "o", pch = 20)
segprofile2 <- segprofile2[-1,]
matplot(x = grid_gamma, segprofile, lty = 1, type = "o", pch = 20, cex = .5)
matplot(x = grid_gamma, segprofile2, lty = 1, type = "o", pch = 20)
matplot(x = grid_gamma, segprofile2, lty = 1, type = "o", pch = 20, col = c(2, rep("gray", N)))
matplot(x = grid_gamma, segprofile2, lty = 1, type = "o", pch = 20, col = c(2, rep("gray", 100)))
liens(grid_gamma, segprofile2[,1], col = 2)
lines(grid_gamma, segprofile2[,1], col = 2)
abline(h = 0, col = 1)
grid
gridmap
gridmap <- distribuido
gridmap <- suavizado
gridmap$grid
grid <- gridmap$grid
st_bbox(grid)
bb <- st_bbox(grid)
bb[3] - bb[1]
bb[4] - bb[2]
norm(c(bb[3] - bb[1], bb[4] - bb[2]), "2")
diagonal <- norm(c(bb[3] - bb[1], bb[4] - bb[2]), "2")
gridmap$lx
max(gridmap$lx_ly)
min(gridmap$lx_ly)
diagonal
seq(min(gridmap$lx_ly), diagonal/L, length.out = 15)
L <- 4
seq(min(gridmap$lx_ly), diagonal/L, length.out = 15)
?interp()
?interpolate_aw
?approx
segprofile2
segprofile2[,1]
grid_gamma <- seq(lx, 2500, length.out = 15)
approx(grid_gamma, segprofile2[,1])
approxfun(grid_gamma, segprofile2[,1])
curve(approxfun(grid_gamma, segprofile2[,1])(x), 1,2500)
curve(approxfun(grid_gamma, segprofile2[,1], method = "linear")(x), 1,2500)
curve(approxfun(grid_gamma, segprofile2[,1], method = "constant")(x), 1,2500)
curve(approxfun(grid_gamma, segprofile2[,1])(x), 1,2500)
curve(approxfun(grid_gamma, segprofile2[,1])(x), 1,2500)
curve(approxfun(grid_gamma, segprofile2[,1])(x), 1,2800)
curve(approxfun(grid_gamma, segprofile2[,1])(x), 1,2500)
uniroot(approxfun(grid_gamma, segprofile2[,1]))
uniroot(approxfun(grid_gamma, segprofile2[,1]), 1,2500)
uniroot(approxfun(grid_gamma, segprofile2[,1]), interval = c(1,2500))
uniroot(approxfun(grid_gamma, segprofile2[,1]), lower =1, f.lower = 2500)
uniroot(approxfun(grid_gamma, segprofile2[,1]), lower = 1, upper = 2500)
curve(approxfun(grid_gamma, segprofile2[,1])(x), lx,2500)
uniroot(approxfun(grid_gamma, segprofile2[,1]), lower = lx, upper = 2500)
uniroot(approxfun(grid_gamma, segprofile2[,1]), interval = range(grid_gamma))
matplot(x = grid_gamma, segprofile, lty = 1, type = "l", pch = 20, cex = .5)
matplot(x = grid_gamma, segprofile2, lty = 1, type = "l", pch = 20, col = c(2, rep("gray", 100)))
matplot(x = grid_gamma, segprofile, lty = 1, type = "l", pch = 20, cex = .5)
matplot(x = grid_gamma, segprofile2, lty = 1, type = "l", pch = 20, col = c(2, rep("gray", 100)))
results
segprofile2
segprofile2[,-1]
apply(segprofile2[,-1], 1, max)
apply(segprofile2[,-1], 1, quantile(.99))
apply(segprofile2[,-1], 1, quantile, prob = .99)
apply(segprofile2[,-1], 1, max)
apply(segprofile2[,-1], 1, quantile, prob = .99)
approxfun(grid_gamma, segprofile2[,1] - apply(segprofile2[,-1], 1, quantile, prob = .99))
uniroot(approxfun(grid_gamma, segprofile2[,1] - apply(segprofile2[,-1], 1, quantile, prob = .99)), interval = range(grid_gamma))
uniroot(approxfun(grid_gamma, segprofile2[,1] - apply(segprofile2[,-1], 1, quantile, prob = .99)), interval = range(grid_gamma))$root
m0 <- uniroot(approxfun(grid_gamma, segprofile2[,1] - apply(segprofile2[,-1], 1, quantile, prob = .99)), interval = range(grid_gamma))$root
diagonal
diagonal/L
min(m0, diagonal/L)
min(m0, diagonal/L) - lx
min(m0, diagonal*.25) - lx
D <- min(m0, diagonal*.25) - lx
L <- 5
Hmicro <- approxfun(grid_gamma, segprofile2[,1])(lx + D/L)
Hmicro
Hmacro <- approxfun(grid_gamma, segprofile2[,1])(lx + D*(L-1)/L)
Hmacro
results
apply(segprofile2[,-1], 1, quantile, prob = .99)
apply(segprofile2[,-1], 1, quantile, prob = c(.01, .99))
apply(segprofile2[,-1], 1, quantile, prob = c(.01, .99)) %>% t
apply(segprofile2[,-1], 1, quantile, prob = c(.01, .99))
cbind(segprofile2[,1], apply(segprofile2[,-1], 1, quantile, prob = c(.01, .99)))
cbind(segprofile2[,1], apply(segprofile2[,-1], 1, quantile, prob = c(.01, .99)) %>% t)
cbind(segprofile2[,1], t(apply(segprofile2[,-1], 1, quantile, prob = c(.01, .99))))
results <- segprofile2
results
results <- cbind(results[,1], t(apply(results[,-1], 1, quantile, prob = c(.01, .99))))
results
colnames(results) <- c("H", ".01", ".99")
results
m0 <- uniroot(approxfun(grid_gamma, results[,1] - results[,3]), interval = range(grid_gamma))$root
D <- min(m0, diagonal*.25) - lx
gamma_micro <- lx + D/L
gamma_macro <- lx + D*(L-1)/L
Hmicro <- approxfun(grid_gamma, results[,1])(gamma_micro)
Hmacro <- approxfun(grid_gamma, results[,1])(gamma_macro)
Hmicro
Hmacro
points(gamma_micro, Hmicro, col = 4)
points(gamma_macro, Hmacro, col = 4)
roxygen2::roxygenise()
roxygen2::roxygenise()
seg_profile2(suavizado, grid_gamma = grid_gamma, N = 1)
seg_profile2(suavizado, grid_gamma = grid_gamma, N = 2)
roxygen2::roxygenise()
seg_profile2(suavizado, grid_gamma = grid_gamma, N = 2)
seg_profile2(suavizado, N = 2)
seg_profile2(suavizado, N = 2)
roxygen2::roxygenise()
data(input)
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
lx <- 100
distribuido <- input %>%
distribute(lx = lx, vars = vars)
roxygen2::roxygenise()
data(input)
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
lx <- 100
input$id <- 1:nrow(input)
# grid <- st_make_grid(input, cellsize = c(lx, ly), crs = st_crs(input))
grid <- st_make_grid(input, cellsize = c(lx, ly), ...)
ly <- lx
grid <- st_make_grid(input, cellsize = c(lx, ly))
intersects <- st_intersects(input, grid) %>%
lapply(as.data.table) %>%
rbindlist(idcol = "id") %>%
.[, id := as.numeric(id)] %>%
setnames("V1", "i") %>%
.[]
?st_crosses()
?st_intersection()
distribuido <- input %>%
distribute(lx = lx, vars = vars)
distribuido
distribuido$grid
intersection(distribuido$grid, input)
st_intersection(distribuido$grid, input)
st_intersection(distribuido$grid, input) %>% plot
st_intersection(distribuido$grid, input)
g2 <- st_intersection(distribuido$grid, input)
g2
plot(g2[,1])
roxygen2::roxygenise()
data(input)
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
lx <- 100
distribuido <- input %>%
distribute(lx = lx, vars = vars)
plot(distribuido, var = vars[1])
lx <- 70
distribuido <- input %>%
distribute(lx = lx, vars = vars)
plot(distribuido, var = vars[1])
lx <- 30
distribuido <- input %>%
distribute(lx = lx, vars = vars)
plot(distribuido, var = vars[1])
lx <- 80
distribuido <- input %>%
distribute(lx = lx, vars = vars, )
plot(distribuido, var = vars[1])
distribuido$grid
lx <- 100
distribuido <- input %>%
distribute(lx = lx, vars = vars, )
distribuido$grid
roxygen2::roxygenise()
distribuido <- input %>%
distribute(lx = lx, vars = vars, )
distribuido$grid
lx <- 30
distribuido <- input %>%
distribute(lx = lx, vars = vars, )
plot(distribuido, var = vars[1])
suavizado <- smoothgrid(distribuido, sigma = 200)
plot(suavizado, var = vars[1])
lx <- 60
distribuido <- input %>%
distribute(lx = lx, vars = vars, )
suavizado <- smoothgrid(distribuido, sigma = 200)
plot(suavizado, var = vars[1])
distribuido$grid
distribuido$grid
st_drop_geometry(grid)
lx <- 100
distribuido <- input %>%
distribute(lx = lx, vars = vars, )
plot(distribuido, var = vars[1])
suavizado <- smoothgrid(distribuido, sigma = 200)
plot(suavizado, var = vars[1])
entornos <- environments(suavizado, gamma = 500, vars = vars)
plot(entornos, var = "Hp")
coef(distribuido)
coef(suavizado)
coef(entornos)
diferencia <- diff_grid(distribuido, distribuido1985, var = vars[1])
data("input1985")
distribuido195 <- distribute(input1985, lx = lx)
distribuido195 <- distribute(input = input1985, lx = lx)
distribuido1985 <- distribute(input = input1985, lx = lx)
distribuido1985
data("input1985")
distribuido1985 <- distribute(input = input1985, lx = lx)
distribuido1985 <- distribute(input = input1985, lx = lx, vars = vars)
diferencia <- diff_grid(distribuido, distribuido1985, var = vars[1])
data("input1985")
distribuido1985 <- distribute(input = input1985, lx = lx, vars = vars)
distribuido1985
diferencia <- diff_grid(distribuido, distribuido1985, var = vars[1])
grid
rm(grid)
diferencia <- diff_grid(distribuido, distribuido1985, var = vars[1])
data(input)
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
lx <- 100
distribuido <- input %>%
distribute(lx = lx, vars = vars)
plot(distribuido, var = vars[1])
suavizado <- smoothgrid(distribuido, sigma = 200)
plot(suavizado, var = vars[1])
entornos <- environments(suavizado, gamma = 500, vars = vars)
plot(entornos, var = "Hp")
coef(distribuido)
coef(suavizado)
coef(entornos)
data("input1985")
distribuido1985 <- distribute(input = input1985, lx = lx, vars = vars)
diferencia <- diff_grid(distribuido, distribuido1985, var = vars[1])
diferencia
gridmapX <- distribuido
gridmapY <- distribuido1985
var <- vars[1]
gridx <- gridmapX$grid
gridy <- gridmapY$grid
bb <- c(apply(rbind(st_bbox(gridx), st_bbox(gridy))[,1:2], 2, min),
apply(rbind(st_bbox(gridx), st_bbox(gridy))[,3:4], 2, max)) %>%
st_bbox(crs = st_crs(gridx))
vars <- paste0(var, c(".x", ".y"))
grid <- st_make_grid(bb, cellsize = gridmapX$lx_ly)
gridmapX$lx_ly
bb
bb <- c(apply(rbind(st_bbox(gridx), st_bbox(gridy))[,1:2], 2, min),
apply(rbind(st_bbox(gridx), st_bbox(gridy))[,3:4], 2, max)) %>%
st_bbox(crs = st_crs(gridx))
bb
st_crs(input)
distribuido1985 <- distribute(input = input1985, lx = lx, vars = vars, crs = st_crs(input))
distribuido1985 <- distribute(input = input1985, lx = lx, vars = vars, crs = st_crs(input))
st_transform(input1985, crs = st_crs(input))
input1985 <- st_transform(input1985, crs = st_crs(input))
distribuido1985 <- distribute(input = input1985, lx = lx, vars = vars)
data("input1985")
input1985 <- st_transform(input1985, crs = st_crs(input))
distribuido1985 <- distribute(input = input1985, lx = lx, vars = vars)
input1985
distribuido1985 <- distribute(input = input1985, lx = lx, vars = vars)
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
data("input1985")
# input1985 <- st_transform(input1985, crs = st_crs(input))
distribuido1985 <- distribute(input = input1985, lx = lx, vars = vars, crs = st_crs(input))
diferencia <- diff_grid(distribuido, distribuido1985, var = vars[1])
data("input1985")
input1985 <- st_transform(input1985, crs = st_crs(input))
distribuido1985 <- distribute(input = input1985, lx = lx, vars = vars)
diferencia <- diff_grid(distribuido, distribuido1985, var = vars[1])
plot(diferencia)
gridy <- gridmapY$grid
gridmapY <- distribuido1985
gridy <- gridmapY$grid
bb <- c(apply(rbind(st_bbox(gridx), st_bbox(gridy))[,1:2], 2, min),
apply(rbind(st_bbox(gridx), st_bbox(gridy))[,3:4], 2, max)) %>%
st_bbox(crs = st_crs(gridx))
bb
bb <- c(apply(rbind(st_bbox(gridx), st_bbox(gridy))[,1:2], 2, min),
apply(rbind(st_bbox(gridx), st_bbox(gridy))[,3:4], 2, max)) %>%
st_bbox(crs = st_crs(gridx))
gridx <- gridmapX$grid
gridy <- gridmapY$grid
bb <- c(apply(rbind(st_bbox(gridx), st_bbox(gridy))[,1:2], 2, min),
apply(rbind(st_bbox(gridx), st_bbox(gridy))[,3:4], 2, max)) %>%
st_bbox(crs = st_crs(gridx))
vars <- paste0(var, c(".x", ".y"))
grid <- st_make_grid(bb, cellsize = gridmapX$lx_ly)
grid
ies <- union(gridx$i, gridy$i)
grid <- grid %>%
as.data.table %>%
.[, i:= .I] %>%
.[i %in% ies] %>%
merge(st_drop_geometry(gridx), all = T) %>%
merge(st_drop_geometry(gridy), all = T) %>%
.[, (setdiff(names(.), "geometry")) := lapply(.SD, \(x) nafill(x, fill = 0)), .SDcols = setdiff(names(.), "geometry")] %>%
.[]
var1 <- grid[, vars[1], with = F]
var2 <- grid[, vars[2], with = F]
grid <- grid %>%
.[, (var) := var1-var2] %>%
.[, c("i", var, "geometry"), with = F] %>%
st_as_sf()
gridmapX$grid <- grid
gridmapX$grid
data("input1985")
input1985 <- st_transform(input1985, crs = st_crs(input))
distribuido1985 <- distribute(input = input1985, lx = lx, vars = vars)
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
data("input1985")
input1985 <- st_transform(input1985, crs = st_crs(input))
distribuido1985 <- distribute(input = input1985, lx = lx, vars = vars)
diferencia <- diff_grid(distribuido, distribuido1985, var = vars[1])
plot(diferencia)
diferencia2 <- diff_grid(distribuido1985, distribuido, var = vars[1])
plot(diferencia2)
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
data("input1985")
input1985 <- st_transform(input1985)
distribuido1985 <- distribute(input = input1985, lx = lx, vars = vars, crs = st_crs(input))
diferencia <- diff_grid(distribuido, distribuido1985, var = vars[1])
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
data("input1985")
input1985 <- st_transform(input1985, crs=32721)
distribuido1985 <- distribute(input = input1985, lx = lx, vars = vars)
diferencia <- diff_grid(distribuido, distribuido1985, var = vars[1])
plot(diferencia)
diferencia2 <- diff_grid(distribuido1985, distribuido, var = vars[1])
plot(diferencia2)
gridmapX <- distribuido
gridmapX <- distribuido
gridmapY <- distribuido1985
gridx <- gridmapX$grid
gridy <- gridmapY$grid
bb <- c(apply(rbind(st_bbox(gridx), st_bbox(gridy))[,1:2], 2, min),
apply(rbind(st_bbox(gridx), st_bbox(gridy))[,3:4], 2, max)) %>%
st_bbox(crs = st_crs(gridx))
bb
vars <- paste0(var, c(".x", ".y"))
grid <- st_make_grid(bb, cellsize = gridmapX$lx_ly)
ies <- union(gridx$i, gridy$i)
ies
gridx
gridy
ies <- union(gridx$i, gridy$i)
ies
ies %>% length
grid
gridx$i
gridx
gridy
ies <- union(gridx$i, gridy$i)
grid <- grid %>%
as.data.table %>%
.[, i:= .I] %>%
.[i %in% ies] %>%
merge(st_drop_geometry(gridx), all = T) %>%
merge(st_drop_geometry(gridy), all = T) %>%
.[, (setdiff(names(.), "geometry")) := lapply(.SD, \(x) nafill(x, fill = 0)), .SDcols = setdiff(names(.), "geometry")] %>%
.[]
grid %>%
as.data.table %>%
.[, i:= .I] %>%
.[i %in% ies]
grid %>%
as.data.table %>%
.[, i:= .I] %>%
.[i %in% ies] %>%
merge(st_drop_geometry(gridx), all = T)
grid %>%
as.data.table %>%
.[, i:= .I] %>%
.[i %in% ies] %>%
merge(st_drop_geometry(gridx), all = T) %>%
merge(st_drop_geometry(gridy), all = T)
grid %>%
as.data.table %>%
.[, i:= .I] %>%
.[i %in% ies] %>%
merge(st_drop_geometry(gridx), all = T) %>%
merge(st_drop_geometry(gridy), all = T) %>%
.[, (setdiff(names(.), "geometry")) := lapply(.SD, \(x) nafill(x, fill = 0)), .SDcols = setdiff(names(.), "geometry")] %>%
.[]
grid <- grid %>%
as.data.table %>%
.[, i:= .I] %>%
.[i %in% ies] %>%
merge(st_drop_geometry(gridx), all = T) %>%
merge(st_drop_geometry(gridy), all = T) %>%
.[, (setdiff(names(.), "geometry")) := lapply(.SD, \(x) nafill(x, fill = 0)), .SDcols = setdiff(names(.), "geometry")] %>%
.[]
grid
data(input)
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
lx <- 100
distribuido <- input %>%
distribute(lx = lx, vars = vars)
plot(distribuido, var = vars[1])
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
data("input1985")
input1985 <- st_transform(input1985, crs=32721)
distribuido1985 <- distribute(input = input1985, lx = lx, vars = vars)
plot(distribuido1985)
lx
distribuido1985 <- input1985 %>%
distribute(lx = lx, vars = vars)
diferencia <- diff_grid(distribuido, distribuido1985, var = vars[1])
plot(diferencia)
distribuido1985 <- input1985 %>%
distribute(lx = lx, vars = vars)
gridmapX <- distribuido
gridmapY <- distribuido1985
gridx <- gridmapX$grid
gridy <- gridmapY$grid
bb <- c(apply(rbind(st_bbox(gridx), st_bbox(gridy))[,1:2], 2, min),
apply(rbind(st_bbox(gridx), st_bbox(gridy))[,3:4], 2, max)) %>%
st_bbox(crs = st_crs(gridx))
vars <- paste0(var, c(".x", ".y"))
gridmapX$lx_ly
grid <- st_make_grid(bb, cellsize = gridmapX$lx_ly)
grid
plot(grid)
plot(grid)
grid
plot(grid[,1])
grid <- st_make_grid(bb, cellsize = c(lx,lx))
plot(grid[,1])
grid <- st_make_grid(bb, cellsize = gridmapX$lx_ly)
plot(grid[,1])
grid
