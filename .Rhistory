.[, i:=1:.N] %>%
.[] %>%
merge(distributed_data, all.x = T) %>%
st_as_sf
grid
grid %>% dim
dim(simulaciones)
simulaciones <- replicate(N, {
# la linea siguiente hace que solo funcione para variables binarias, hay que cambiar a la multnomial
sim_var <- sapply(floor(tot_p), \(nn) rbinom(1, size = nn, prob = pi_m[1]))
simulated_data <- cbind(sim_var, tot_p - sim_var)
colnames(simulated_data) <- vars
return(simulated_data)
}, simplify = FALSE)
simulaciones
dim(simulaciones)
dim(simulaciones)
simulaciones <- Reduce("cbind", simulaciones)
dim(simulaciones)
simulaciones <- cbind(dd, simulaciones)
grid <- gridmap$grid
matriz <- gridmap$distances
sigma <- gridmap$sigma
grid
dim(grid)
dd <- gridmap$grid %>%
st_drop_geometry %>%
.[, vars, with = F] %>%
as.matrix
dim(dd)
tol = .Machine$double.eps
dd <- na.omit(dd) + tol
M <- ncol(dd)
tot <- sum(dd)
tot_p <- rowSums(dd)
tot_m <- colSums(dd)
pi_m <- tot_m/tot
simulaciones <- replicate(N, {
# la linea siguiente hace que solo funcione para variables binarias, hay que cambiar a la multnomial
sim_var <- sapply(floor(tot_p), \(nn) rbinom(1, size = nn, prob = pi_m[1]))
simulated_data <- cbind(sim_var, tot_p - sim_var)
colnames(simulated_data) <- vars
return(simulated_data)
}, simplify = FALSE)
simulaciones <- Reduce("cbind", simulaciones)
dim(simulaciones)
tot_p
tot_p %>% length
dd
dd
dd <- gridmap$grid %>%
st_drop_geometry %>%
.[, vars, with = F] %>%
as.matrix
dim(dd)
tol = .Machine$double.eps
dd <- na.omit(dd) + tol
dim(dd)
dd <- gridmap$grid %>%
st_drop_geometry %>%
.[, vars, with = F] %>%
as.matrix
dd
dd
dd <- gridmap$grid %>%
st_drop_geometry %>%
.[, vars, with = F]
dd
dd[is.na(nivel_edu_alto)]
dd[,which.is.na(nivel_edu_alto)]
dd[,is.na(nivel_edu_alto) %>% which]
dd[2568:2570]
plot(gridmap)
gridmap$grid
plot(gridmap)
grid[2569,]
plot(gridmap) +
geom_sf(data = grid[2569,])
plot(gridmap) +
geom_sf(data = grid[2569,], col = 4)
plot(gridmap) +
geom_sf(data = grid[2569,], fill = 4)
plot(gridmap) +
geom_sf(data = grid, fill = 4)
plot(gridmap) +
geom_sf(data = grid[2568,], fill = 4)
geom_sf(data = grid[2570,], fill = 5)
plot(gridmap) +
geom_sf(data = grid[2568,], fill = 4) +
geom_sf(data = grid[2570,], fill = 5)
input
grid
dim(grid)
na.omit(grid)
na.omit(grid) %>% dim
na.omit(grid, invert = TRUE)
na.omit(grid, invert = TRUE)[,i]
na.omit(grid, invert = TRUE)[,.I]
na.omit(grid, invert = TRUE)[,i]
grid
na.omit(grid, invert = TRUE)[,i]
na.omit(grid, invert = TRUE)[i]
na.omit(grid, invert = TRUE)[,"i"]
na.omit(grid, invert = TRUE) %>% class
grid %>%
as.data.table %>%
na.omit(inver = T)
grid %>%
as.data.table %>%
na.omit(inver = T) %>%
.[,i]
na.omit(grid, inv = T)
na.omit(grid, inv = T)[,i]
na.omit(grid, inv = T)[,"i"]
na.omit(grid, inv = T)[,1]
na.omit(grid, inv = T)[,"i"]
na.omit(grid, inv = T)[,"i"] %>% as.numeric
na.omit(grid, inv = T)[,"i"] %>% as.numeric
grid %>%
as.data.table %>%
na.omit(inver = T) %>%
.[,i]
na_index <- grid %>%
as.data.table %>%
na.omit(inver = T) %>%
.[,i]
distances %>% dim
input_data <- st_read(file) %>%
st_transform(crs = 32721) %>%
.[grep("*20$", x= .$LOCALIDAD),]
data <- input_data %>%
distribute(lx = lx, vars = vars)
data
data %>% dim
data$grid
data$grid %>% dim
roxygen2::roxygenise()
input_data <- st_read(file) %>%
st_transform(crs = 32721) %>%
.[grep("*20$", x= .$LOCALIDAD),]
data <- input_data %>%
distribute(lx = lx, vars = vars)
data$grid %>% dim
seg_profile(data)
# setting the parameters
lx <- 300
sigma <- 200
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
set.seed(1234)
results <- lapply(files, function(file) {
input_data <- st_read(file) %>%
st_transform(crs = 32721) %>%
.[grep("*20$", x= .$LOCALIDAD),]
data <- input_data %>%
distribute(lx = lx, vars = vars)
# smoothgrid(sigma = sigma)
seg_profile(data)
})
path_to_files <- "~/Dropbox/Documentos/juanpablolabat/datos3"
files <- list.files(path = path_to_files, full.names = T)[-1]
# setting the parameters
lx <- 300
sigma <- 200
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
set.seed(1234)
results <- lapply(files, function(file) {
input_data <- st_read(file) %>%
st_transform(crs = 32721) %>%
.[grep("*20$", x= .$LOCALIDAD),]
data <- input_data %>%
distribute(lx = lx, vars = vars)
# smoothgrid(sigma = sigma)
seg_profile(data)
})
roxygen2::roxygenise()
path_to_files <- "~/Dropbox/Documentos/juanpablolabat/datos3"
files <- list.files(path = path_to_files, full.names = T)[-1]
# setting the parameters
lx <- 300
sigma <- 200
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
set.seed(1234)
results <- lapply(files, function(file) {
input_data <- st_read(file) %>%
st_transform(crs = 32721) %>%
.[grep("*20$", x= .$LOCALIDAD),]
data <- input_data %>%
distribute(lx = lx, vars = vars)
# smoothgrid(sigma = sigma)
seg_profile(data)
})
file <- files[1]
file
input_data <- st_read(file) %>%
st_transform(crs = 32721) %>%
.[grep("*20$", x= .$LOCALIDAD),]
data <- input_data %>%
distribute(lx = lx, vars = vars)
seg_profile(data)
gridmap <- data
grid <- gridmap$grid
matriz <- gridmap$distances
sigma <- gridmap$sigma
bb <- st_bbox(grid)
diagonal <- norm(c(bb[3] - bb[1], bb[4] - bb[2]), "2")
grid_gamma <- round(seq(min(gridmap$lx_ly), diagonal*frac, length.out = 15))
dd <- gridmap$grid %>%
st_drop_geometry %>%
.[, vars, with = F] %>%
as.matrix
tol = .Machine$double.eps
dd <- na.omit(dd) + tol
M <- ncol(dd)
tot <- sum(dd)
tot_p <- rowSums(dd)
tot_m <- colSums(dd)
pi_m <- tot_m/tot
simulaciones <- replicate(N, {
# la linea siguiente hace que solo funcione para variables binarias, hay que cambiar a la multnomial
sim_var <- sapply(floor(tot_p), \(nn) rbinom(1, size = nn, prob = pi_m[1]))
simulated_data <- cbind(sim_var, tot_p - sim_var)
colnames(simulated_data) <- vars
return(simulated_data)
}, simplify = FALSE)
simulaciones <- Reduce("cbind", simulaciones)
simulaciones <- cbind(dd, simulaciones)
output <- sapply(grid_gamma, function(gamma) {
ker <- cvmgof::kernel.function.quart(matriz/gamma) %>%
Matrix::Matrix(sparse = T)
ker <- apply(ker, 1, \(x) x/sum(x)) %>% t
crossprod(ker, simulaciones)
}, simplify = "array")
dim(simulaciones)
dim(data)
dim(grid)
gamma
ker <- cvmgof::kernel.function.quart(matriz/gamma) %>%
Matrix::Matrix(sparse = T)
ker <- apply(ker, 1, \(x) x/sum(x)) %>% t
crossprod(ker, simulaciones)
simulaciones
ker
ker <- cvmgof::kernel.function.quart(matriz/gamma) %>%
Matrix::Matrix(sparse = T)
ker
matriz
gridmap
gridmap
gridmap$distances
file
input_data <- st_read(file) %>%
st_transform(crs = 32721) %>%
.[grep("*20$", x= .$LOCALIDAD),]
input_data
data <- input_data %>%
distribute(lx = lx, vars = vars)
data$distances
input <- input_data
input$id <- 1:nrow(input)
# grid <- st_make_grid(input, cellsize = c(lx, ly), crs = st_crs(input))
grid <- st_make_grid(input, cellsize = c(lx, ly))
grid <- st_intersection(grid, st_union(st_buffer(input, dist = .1)))
intersects <- st_intersects(input, grid) %>%
lapply(as.data.table) %>%
rbindlist(idcol = "id") %>%
.[, id := as.numeric(id)] %>%
setnames("V1", "i") %>%
.[]
data <- st_drop_geometry(input) %>%
as.data.table() %>%
.[, vars, with = F] %>%
.[, id := .I] %>%
.[]
distributed_data <- intersects %>%
.[, by = id, .(.N, i)] %>%
merge(data) %>%
.[ , (vars) := lapply(.SD, \(x) x/N), .SDcols = vars] %>%
.[, keyby = .(i), lapply(.SD, sum), .SDcols = vars] %>%
.[]
grid <- as.data.table(grid) %>%
.[, i:=1:.N] %>%
.[] %>%
merge(distributed_data, all.x = T) %>%
st_as_sf
distances <- grid %>%
st_geometry() %>%
st_centroid() %>%
st_distance(which = "Euclidean") %>%
as.numeric %>%
matrix(nrow(grid))
distances
grid
dim(grid)
distances <- grid %>%
st_geometry() %>%
st_centroid() %>%
st_distance(which = "Euclidean") %>%
as.numeric %>%
matrix(nrow(grid))
### AGREGADO 20250221
na_index <- grid %>%
as.data.table %>%
na.omit(inver = T) %>%
.[,i]
na_index
grid
grid %>%
as.data.table %>%
na.omit(inver = T)
### AGREGADO 20250221
na_index <- grid %>%
as.data.table %>%
na.omit(inver = T) %>%
.[,i]
grid
na.omit(grid)
distances[-na_index, -na_index]
na_index
distances[-c(na_index), -c(na_index)]
na_index <- 2
distances[-c(na_index), -c(na_index)]
na_index <- 2:3
distances[-c(na_index), -c(na_index)]
na_index <- 2:3
distances[-na_index, -na_index]
na_index
### AGREGADO 20250221
na_index <- grid %>%
as.data.table %>%
na.omit(inver = T) %>%
.[,i]
grid <- na.omit(grid)
na_index
is.null(na_index)
length(na_index)
roxygen2::roxygenise()
path_to_files <- "~/Dropbox/Documentos/juanpablolabat/datos3"
files <- list.files(path = path_to_files, full.names = T)[-1]
# setting the parameters
lx <- 300
sigma <- 200
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
results <- lapply(files, function(file) {
input_data <- st_read(file) %>%
st_transform(crs = 32721) %>%
.[grep("*20$", x= .$LOCALIDAD),]
data <- input_data %>%
distribute(lx = lx, vars = vars)
# smoothgrid(sigma = sigma)
seg_profile(data)
})
results
lapply(results, function(res) {
plot(res)
})
sapply(results, \(res) {
res$results[,"H"]
}) %>% matplot(type = "l", lty = 1)
sapply(results, \(res) {
res$values[c("Hmicro","Hmacro")]
}) %>% t
# setting the parameters
lx <- 100
sigma <- 200
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
set.seed(1234)
results <- lapply(files, function(file) {
input_data <- st_read(file) %>%
st_transform(crs = 32721) %>%
.[grep("*20$", x= .$LOCALIDAD),]
data <- input_data %>%
distribute(lx = lx, vars = vars)
# smoothgrid(sigma = sigma)
seg_profile(data)
})
files
readRDS("~/Dropbox/Documentos/juanpablolabat/resultados/resultados_socialseg_2024-09-25.rds")
res <- readRDS("~/Dropbox/Documentos/juanpablolabat/resultados/resultados_socialseg_2024-09-25.rds")
res
res
res[[|]]
res[[1]]
sapply(results, \(res) {
res$values[c("Hmicro","Hmacro")]
}) %>% t
sapply(res, \(res) {
res$values[c("Hmicro","Hmacro")]
}) %>% t
res[[1]
res[[1]]
files
sapply(res, \(res) {
res$values[c("Hmicro","Hmacro")]
}) %>% t
sapply(results, \(res) {
res$values[c("Hmicro","Hmacro")]
}) %>% t
sapply(res, \(res) {
res$values[c("Hmicro","Hmacro")]
}) %>% t
sapply(results, \(res) {
res$values[c("Hmicro","Hmacro")]
}) %>% t
results
str(results)
str(results[[1]])
class(results[[1]])
class(results)
class(results[[1]])
sapply(res, \(res) {
res$values[c("Hmicro","Hmacro")]
}) %>% t
sapply(1:length(files))
sapply(1:length(files), \(i){
results[[i]][c("Hmicro","Hmacro")]
})
results
1:length(files)
results[[i]]
sapply(1:length(files), \(i){
results[[i]]$values[c("Hmicro","Hmacro")]
})
sapply(1:length(files), \(i){
results[[i]]$values[c("Hmicro","Hmacro")]
}) %>% t
sapply(1:length(files), \(i){
cbind(file = files[[i]], results[[i]]$values[c("Hmicro","Hmacro")])
}) %>% t
gsub("^./","",files[[i]])
gsub("^./","",files)
gsub("^.*/","",files)
cbind(file = gsub("^*/","",files[[i]]), results[[i]]$values[c("Hmicro","Hmacro")])
gsub("^.*/","",files)
cbind(file = gsub("^.*/","",files[[i]]), results[[i]]$values[c("Hmicro","Hmacro")])
sapply(1:length(files), \(i){
cbind(file = gsub("^.*/","",files[[i]]), results[[i]]$values[c("Hmicro","Hmacro")])
}) %>% t
sapply(1:length(files), \(i){
cbind(file = gsub("^.*/","",files[[i]]), results[[i]]$values[c("Hmicro","Hmacro")])
}) %>% t
sapply(1:length(files), \(i){
# cbind(file = gsub("^.*/","",files[[i]]), results[[i]]$values[c("Hmicro","Hmacro")])
results[[i]]$values[c("Hmicro","Hmacro")]
}) %>% t
cbind(file = gsub("^.*/","",files[[i]]), results[[i]]$values[c("Hmicro","Hmacro")])
sapply(1:length(files), \(i){
cbind(file = gsub("^.*/","",files[[i]]), results[[i]]$values[c("Hmicro","Hmacro")])
}) %>% t
sapply(1:length(files), \(i){
cbind(file = gsub("^.*/","a",files[[i]]), results[[i]]$values[c("Hmicro","Hmacro")])
}) %>% t
cbind(file = gsub("^.*/","",files[[i]]), results[[i]]$values[c("Hmicro","Hmacro")])
sapply(1:length(files), \(i){
cbind(file = gsub("^.*/","",files[[i]]), results[[i]]$values[c("Hmicro","Hmacro")])
}) %>% t
sapply(1:length(files), \(i){
f <- gsub("^.*/","",files[[i]])
cbind(file = f, results[[i]]$values[c("Hmicro","Hmacro")])
}) %>% t
sapply(1:length(files), \(i){
f <- gsub("^.*/","",files[[i]])
cbind(results[[i]]$values[c("Hmicro","Hmacro")])
}) %>% t
sapply(1:length(files), \(i){
f <- gsub("^.*/","",files[[i]])
results[[i]]$values[c("Hmicro","Hmacro")]
}) %>% t
sapply(1:length(files), \(i){
f <- gsub("^.*/","",files[[i]])
data.table(results[[i]]$values[c("Hmicro","Hmacro")])
}) %>% t
sapply(1:length(files), \(i){
f <- gsub("^.*/","",files[[i]])
results[[i]]$values[c("Hmicro","Hmacro")] %>% t
})
sapply(1:length(files), \(i){
f <- gsub("^.*/","",files[[i]])
as.data.table(results[[i]]$values[c("Hmicro","Hmacro")])
})
sapply(1:length(files), \(i){
f <- gsub("^.*/","",files[[i]])
as.data.table(results[[i]]$values[c("Hmicro","Hmacro")]) %>% t
})
lapply(1:length(files), \(i){
f <- gsub("^.*/","",files[[i]])
as.data.table(results[[i]]$values[c("Hmicro","Hmacro")])
})
lapply(1:length(files), \(i){
f <- gsub("^.*/","",files[[i]])
as.data.table(results[[i]]$values[c("Hmicro","Hmacro")])
}) %>% rbindlist
lapply(1:length(files), \(i){
f <- gsub("^.*/","",files[[i]])
as.data.table(file = f, results[[i]]$values[c("Hmicro","Hmacro")])
}) %>% rbindlist
lapply(1:length(files), \(i){
f <- gsub("^.*/","",files[[i]])
data.table(file = f, results[[i]]$values[c("Hmicro","Hmacro")])
}) %>% rbindlist
lapply(1:length(files), \(i){
f <- gsub("^.*/","",files[[i]])
as.data.table(results[[i]]$values[c("Hmicro","Hmacro")]) %>%
cbind(file = f, .)
}) %>% rbindlist
lapply(1:length(files), \(i){
f <- gsub("^.*/","",files[[i]])
as.data.table(results[[i]]$values[c("Hmicro","Hmacro")]) %>%
cbind(file = f, .)
}) %>% rbindlist %>%
.[, resta := Hmicro - Hmacro] %>%
.[, cociente := Hmicro/Hmacro] %>%
.[]
