fread("localidad_poblacion_recodificacion definitivo.csv")
fread("~/Dropbox/Documentos/juanpablolabat/localidad_poblacion_recodificacion definitivo.csv")
localidades <- fread("~/Dropbox/Documentos/juanpablolabat/localidad_poblacion_recodificacion definitivo.csv") %>%
# localidades <- fread("localidad_poblacion_recodificacion definitivo.csv") %>%
.[order(DPTO)] %>%
.[, LOC2 := fifelse(is.na(LOC2), LOC, LOC2)] %>%
.[, DPTO2 := fifelse(is.na(DPTO2), DPTO, DPTO2)] %>%
# .[N >= 1000 & LOC != 900] %>%
.[LOC != 900] %>%
.[, ":="(f0 = paste(DPTO, LOC, sep = ""),
f1 = paste(DPTO2, LOC2, sep = ""))] %>%
.[, by = f1, N2 := sum(N)] %>%
.[N2 >= 1000]
localidades
fwrite(localidades, "~/Dropbox/Documentos/juanpablolabat/localidades.csv")
fread("~/Dropbox/Documentos/juanpablolabat/localidades.csv")[f0 != f1]
fread("~/Dropbox/Documentos/juanpablolabat/resultados/resultados-2025-02-28.csv")[f0 != f1]
fread("~/Dropbox/Documentos/juanpablolabat/resultados/resultados-2025-02-28.csv")[f0 != f1]
merge(fread("~/Dropbox/Documentos/juanpablolabat/localidades.csv")[f0 != f1], all.y = T)
fread("~/Dropbox/Documentos/juanpablolabat/localidades.csv")[f0 != f1)
fread("~/Dropbox/Documentos/juanpablolabat/localidades.csv")[f0 != f1] %>% names
fread("~/Dropbox/Documentos/juanpablolabat/resultados/resultados-2025-02-28.csv")[f0 != f1, .SD, .SDcols = names(localidades)]
fread("~/Dropbox/Documentos/juanpablolabat/resultados/resultados-2025-02-28.csv")
names(localidades)
fread("~/Dropbox/Documentos/juanpablolabat/resultados/resultados-2025-02-28.csv")[f0 != f1, .SD, .SDcols = names(localidades)]
names(localidades)
names(localidades)
fread("~/Dropbox/Documentos/juanpablolabat/resultados/resultados-2025-02-28.csv")[f0 != f1, .SD, .SDcols = names(localidades)[-c(7,10)]]
fread("~/Dropbox/Documentos/juanpablolabat/resultados/resultados-2025-02-28.csv")[f0 != f1, .SD, .SDcols = names(localidades)[-c(7,10)]] %>%
unique
fread("~/Dropbox/Documentos/juanpablolabat/resultados/resultados-2025-02-28.csv")[f0 != f1, .SD, .SDcols = names(localidades)[-c(7,10)]] %>%
unique %>%
merge(fread("~/Dropbox/Documentos/juanpablolabat/localidades.csv")[f0 != f1], all.y = T)
fread("~/Dropbox/Documentos/juanpablolabat/localidades.csv")[f0 != f1]
fread("~/Dropbox/Documentos/juanpablolabat/resultados/resultados-2025-02-28.csv")[f0 != f1, .SD, .SDcols = names(localidades)[-c(7,10)]] %>%
unique %>%
merge(fread("~/Dropbox/Documentos/juanpablolabat/localidades.csv")[f0 != f1], all.y = T)
roxygen2::roxygenise(".")
data(input)
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
lx <- 100
distribuido <- distribute(input, lx = lx, vars = vars)
plot(distribuido)
coef(distribuido) # el indice H
distribuido$values$H # otra forma de lo mismo
suavizado <- smoothgrid(distribuido, sigma = 200)
plot(suavizado)
coef(suavizado)
entornos <- environments(suavizado, gamma = 500, vars = vars)
plot(entornos, var = "Hp")
entornos$grid %>% names
plot(entornos, var = "Ep")
coef(entornos)
input[,vars]
library(socialseg)
data("input")
estimate_index(input[,vars])
library(socialseg)
estimate_index
socialseg:::estimate_index(input[,vars])
roxygen2::roxygenise("/home/manuel/Dropbox/IESTA/socialseg")
estimate_index(input[,vars])
vars
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
lx <- 100
estimate_index(input[,vars])
input[,vars]
estimate_index(as.matrix(input[,vars]))
input[,vars]
estimate_index(st_dropt_geometry(input[,vars]))
estimate_index(st_drop_geometry(input[,vars]))
estimate_index(st_drop_geometry(input[,vars]))$H
estimate_index(st_drop_geometry(input[,vars]))$H
estimacion_clasica <- function(input) estimate_index(st_drop_geometry(input[,vars]))$H
estimacion_clasica(input)
estimacion_clasica <- function(input, vars) estimate_index(st_drop_geometry(input[,vars]))$H
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
estimacion_clasica(input)
estimacion_clasica(input, vars)
estimacion_clasica <- function(input, vars) estimate_index(st_drop_geometry(input[,vars]))$H
rm(vars)
estimacion_clasica(input, vars)
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
estimacion_clasica(input, vars)
roxygen2::roxygenise(".")
roxygen2::roxygenise("./")
roxygen2::roxygenise("/")
roxygen2::roxygenise("")
roxygen2::roxygenise("./")
roxygen2::roxygenise(".")
getwd()
roxygen2::roxygenise("/home/manuel/Dropbox/IESTA/socialseg")
roxygen2::roxygenise("/home/manuel/Dropbox/IESTA/socialseg")
roxygen2::roxygenise("")
roxygen2::roxygenise(".")
data(input)
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
lx <- 100
distribuido <- input %>%
distribute(lx = lx, vars = vars)
distribuido
st_drop_geometry(gridmap$grid)[, var, with = F]
gridmap <- distribuido
var
vars
var <- vars[1]
st_drop_geometry(gridmap$grid)[, var, with = F]
st_drop_geometry(gridmap$grid)[, var, with = F] %>%
.[order(var)]
st_drop_geometry(gridmap$grid)[, var, with = F] %>%
.[order(2)]
st_drop_geometry(gridmap$grid)[, var, with = F] %>%
.[order]
st_drop_geometry(gridmap$grid)[, var, with = F] %>%
.[order()]
st_drop_geometry(gridmap$grid)[, var, with = F]
st_drop_geometry(gridmap$grid)[, var, with = F] %>%
.[order(get(var))]
st_drop_geometry(gridmap$grid)[, var, with = F] %>%
.[order(nivel_edu_alto)]
st_drop_geometry(gridmap$grid)[, var, with = F] %>%
.[order(-get(var))]
st_drop_geometry(gridmap$grid)[, var, with = F] %>%
.[order(get(var))]
st_drop_geometry(gridmap$grid)[, var, with = F] %>%
.[order(-get(var))]
st_drop_geometry(gridmap$grid)[, var, with = F] %>%
.[order(-get(var))] %>%
.[ , cumsum(get(var))]
st_drop_geometry(gridmap$grid)[, var, with = F] %>%
.[order(-get(var))] %>%
.[ , cumsum(get(var))/sum(get(var))]
st_drop_geometry(gridmap$grid)[, var, with = F] %>%
.[order(-get(var))] %>%
.[ , prop := cumsum(get(var))/sum(get(var))] %>%
.[]
per <- .9
st_drop_geometry(gridmap$grid)[, var, with = F] %>%
.[order(-get(var))] %>%
.[ , prop := cumsum(get(var))/sum(get(var))] %>%
.[prop >= per]
st_drop_geometry(gridmap$grid)[, var, with = F] %>%
.[order(-get(var))] %>%
.[ , prop := cumsum(get(var))/sum(get(var))] %>%
.[prop >= per, get(var)[1]]
q <- st_drop_geometry(gridmap$grid)[, var, with = F] %>%
.[order(-get(var))] %>%
.[ , prop := cumsum(get(var))/sum(get(var))] %>%
.[prop >= per, get(var)[1]]
gridmap$grid
st_coordinates(gridmap$grid)
st_coordinates(st_centroids(gridmap$grid))
st_coordinates(st_centroid(gridmap$grid))
st_centroid(gridmap$grid)
st_coordinates(st_centroid(gridmap$grid)) %>% dim
gridmap$grid
st_coordinates(st_centroid(gridmap$grid)) %>%
cbind(gridmap$grid[,var])
data <- st_drop_geometry(gridmap$grid)[, var, with = F]
data <- st_drop_geometry(gridmap$grid)[, var, with = F]
q <- data %>%
.[order(-get(var))] %>%
.[ , prop := cumsum(get(var))/sum(get(var))] %>%
.[prop >= per, get(var)[1]]
st_coordinates(st_centroid(gridmap$grid)) %>%
cbind(data)
data <- st_coordinates(st_centroid(gridmap$grid)) %>%
cbind(data)
data
data[is.na(nivel_edu_alto)]
ggplot() + geom_contour(data = data, aes(x = X, y = Y, z = .data[[var]]), na.rm = T, breaks = q, col = 1,linewidth = 10, show.legend = T)
data
ggplot() +
geom_tile(data = data, aes(x = X, y = Y, fill = .data[[var]]), col = 4)
data
graf <- graf +
ggplot() +
geom_tile(data = data, aes(x = X, y = Y, col = .data[[var]]), col = 4)
ggplot() +
geom_tile(data = data, aes(x = X, y = Y, col = .data[[var]]), col = 4)
data
ggplot() +
geom_tile(data = data, aes(x = X, y = Y, col = .data[[var]]))
ggplot() +
geom_point(data = data, aes(x = X, y = Y, col = .data[[var]]))
?geom_tile
graf <- graf +
ggplot() +
geom_point(data = data, aes(x = X, y = Y, col = .data[[var]])) +
geom_tile(data = data, aes(x = X, y = Y, fill = .data[[var]]))
ggplot() +
geom_point(data = data, aes(x = X, y = Y, col = .data[[var]])) +
geom_tile(data = data, aes(x = X, y = Y, fill = .data[[var]]))
ggplot() +
geom_point(data = data, aes(x = X, y = Y, col = .data[[var]])) +
geom_tile(data = data, aes(x = X, y = Y, fill = .data[[var]])) +
geom_contour(data = data, aes(x = X, y = Y, z = .data[[var]]), na.rm = T, breaks = q, col = 2,linewidth = 10)
ggplot() +
geom_point(data = data, aes(x = X, y = Y, col = .data[[var]])) +
geom_tile(data = data, aes(x = X, y = Y, fill = .data[[var]]))
q
geom_contour(data = data, aes(x = X, y = Y, z = .data[[var]]), na.rm = T, breaks = 0, col = 2,linewidth = 10)
ggplot() +
geom_point(data = data, aes(x = X, y = Y, col = .data[[var]])) +
geom_tile(data = data, aes(x = X, y = Y, fill = .data[[var]])) +
geom_contour(data = data, aes(x = X, y = Y, z = .data[[var]]), na.rm = T, breaks = 0, col = 2,linewidth = 10)
geom_contour(data = data, aes(x = X, y = Y, z = .data[[var]]), na.rm = T, breaks = 0, col = 2
ggplot() +
geom_point(data = data, aes(x = X, y = Y, col = .data[[var]])) +
# geom_tile(data = data, aes(x = X, y = Y, fill = .data[[var]])) +
geom_contour(data = data, aes(x = X, y = Y, z = .data[[var]]), na.rm = T, breaks = 0, col = 2,linewidth = 10)
ggplot() +
geom_point(data = data, aes(x = X, y = Y, col = .data[[var]])) +
# geom_tile(data = data, aes(x = X, y = Y, fill = .data[[var]])) +
geom_contour(data = data, aes(x = X, y = Y, z = .data[[var]]), na.rm = T, breaks = 2, col = 2,linewidth = 10)
data
data[round(get(var),10)>0]
data[round(get(var),5)>0]
data[round(get(var),2)>0]
data <- st_coordinates(st_centroid(gridmap$grid)) %>%
cbind(data)
data
data <- st_drop_geometry(gridmap$grid)[, var, with = F]
q <- data %>%
.[order(-get(var))] %>%
.[ , prop := cumsum(get(var))/sum(get(var))] %>%
.[prop >= 1-per, get(var)[1]]
print(q)
data <- st_coordinates(st_centroid(gridmap$grid)) %>%
cbind(data)
ggplot() +
# geom_point(data = data, aes(x = X, y = Y, col = .data[[var]])) +
geom_tile(data = data, aes(x = X, y = Y, fill = .data[[var]]))
ggplot() +
# geom_point(data = data, aes(x = X, y = Y, col = .data[[var]])) +
geom_tile(data = data, aes(x = X, y = Y, fill = .data[[var]])) +
coord_fixed()
ggplot() +
# geom_point(data = data, aes(x = X, y = Y, col = .data[[var]])) +
geom_tile(data = data, aes(x = X, y = Y, fill = .data[[var]]))
ggplot() +
# geom_point(data = data, aes(x = X, y = Y, col = .data[[var]])) +
geom_tile(data = data, aes(x = X, y = Y, fill = nivel_edu_alto))
data
ggplot() +
geom_point(data = data, aes(x = X, y = Y, col = .data[[var]]))
ggplot() +
geom_point(data = data, aes(x = X, y = Y, col = .data[[var]])) +
coord_fixed()
ggplot()
geom_contour(data = data, aes(x = X, y = Y, z = .data[[var]]), na.rm = T, breaks = q, col = 1,linewidth = 1)
ggplot() +
geom_contour(data = data, aes(x = X, y = Y, z = .data[[var]]), na.rm = T, breaks = q, col = 1,linewidth = 1)
gridmap <- distribuido
data <- st_drop_geometry(gridmap$grid)[, var, with = F]
q <- data %>%
.[order(-get(var))] %>%
.[ , prop := cumsum(get(var))/sum(get(var))] %>%
.[prop >= 1-per, get(var)[1]]
print(q)
data <- st_coordinates(st_centroid(gridmap$grid)) %>%
cbind(data)
g <- ggplot() +
geom_contour(data = data, aes(x = X, y = Y, z = .data[[var]]), na.rm = T, breaks = q, col = 1,linewidth = 1)
g
data
ggplot() +
geom_point(data = data, aes(x = X, y = Y, col = .data[[var]])) +
coord_fixed()
ggplot() +
# geom_point(data = data, aes(x = X, y = Y, col = .data[[var]])) +
coord_fixed() +
geom_tile(data = data, aes(x = X, y = Y, fill = nivel_edu_alto))
ggplot() +
geom_point(data = data, aes(x = X, y = Y, col = .data[[var]])) +
coord_fixed() +
geom_tile(data = data, aes(x = X, y = Y, fill = nivel_edu_alto))
data2 <- gridmap$grid[, var, with = F]
data2 %>%
.[order(-get(var))] %>%
.[ , prop := cumsum(get(var))/sum(get(var))] %>%
.[prop >= 1-per, get(var)[1]]
data2
data2 %>%
.[order(-get(var))]
q <- data2 %>%
as.data.table %>%
.[order(-get(var))] %>%
.[ , prop := cumsum(get(var))/sum(get(var))] %>%
.[prop >= 1-per, get(var)[1]]
data2 %>%
as.data.table %>%
.[order(-get(var))] %>%
.[ , prop := cumsum(get(var))/sum(get(var))] %>%
.[prop >= 1-per, get(var)[1]]
data2 %>%
as.data.table %>%
.[order(-get(var))] %>%
.[ , prop := cumsum(get(var))/sum(get(var))] %>%
.[prop >= 1-per, q := get(var)[1]] %>%
.[]
data2 <- gridmap$grid[, var, with = F] %>%
as.data.table %>%
.[order(-get(var))] %>%
.[ , prop := cumsum(get(var))/sum(get(var))] %>%
.[prop >= 1-per, q := get(var)[1]] %>%
st_as_sf()
data2
gridmap$grid[, var, with = F] %>%
as.data.table %>%
.[order(-get(var))] %>%
.[ , prop := cumsum(get(var))/sum(get(var))] %>%
.[prop >= 1-per, q := get(var)[1]] %>%
.[get(var) >= q] %>%
.[]
per <- .7
data2 <- gridmap$grid[, var, with = F] %>%
as.data.table %>%
.[order(-get(var))] %>%
.[ , prop := cumsum(get(var))/sum(get(var))] %>%
.[prop >= 1-per, q := get(var)[1]] %>%
.[get(var) >= q] %>%
.[] %>%
st_as_sf()
data2
gridmap$grid[, var, with = F] %>%
as.data.table %>%
.[order(-get(var))] %>%
.[ , prop := cumsum(get(var))/sum(get(var))] %>%
.[prop >= 1-per, q := get(var)[1]] %>%
.[
gridmap$grid[, var, with = F] %>%
as.data.table %>%
.[order(-get(var))] %>%
.[ , prop := cumsum(get(var))/sum(get(var))] %>%
.[prop >= 1-per, q := get(var)[1]] %>%
.[]
graf <- graf +
rootSolve::uniroot.all(approxfun(grid_gamma, results[,1] - results[,3]), interval = range(grid_gamma))
roxygen2::roxygenise(".")
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
data("input1985")
input1985 <- st_transform(input1985, crs=32721)
bb <- st_bbox(input)
distribuido1985 <- input1985 %>%
distribute(lx = lx, vars = vars, bbox = bb)
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
lx <- 100
data(input)
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
data("input1985")
input1985 <- st_transform(input1985, crs=32721)
bb <- st_bbox(input)
distribuido1985 <- input1985 %>%
distribute(lx = lx, vars = vars, bbox = bb)
diferencia <- diff_grid(distribuido, distribuido1985, var = vars[1])
distribuido <- input %>%
distribute(lx = lx, vars = vars)
diferencia <- diff_grid(distribuido, distribuido1985, var = vars[1])
plot(diferencia)
diferencia2 <- diff_grid(distribuido1985, distribuido, var = vars[1])
plot(diferencia2)
# Chunk 1
knitr::opts_chunk$set(
collapse = TRUE,
eval = FALSE,
cache = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%",
fig.width = 8,
fig.height = 5
)
library(knitr)
roxygen2::roxygenise()
# Chunk 2
install.packages("remotes")
remotes::install_github("https://github.com/emehache/socialseg")
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
data("input1985")
input1985 <- st_transform(input1985, crs=32721)
bb <- st_bbox(input)
distribuido1985 <- input1985 %>%
distribute(lx = lx, vars = vars, bbox = bb)
diferencia <- diff_grid(distribuido, distribuido1985, var = vars[1])
plot(diferencia)
diferencia <- diff_grid(distribuido, distribuido1985, var = vars[1])
plot(diferencia)
gridmapX <- distribuido
gridmapY <- distribuido1985
gridx <- gridmapX$grid
gridy <- gridmapY$grid
var = vars[1]
gridx <- gridmapX$grid
gridy <- gridmapY$grid
gridx
var
ggplot() +
geom_sf(gridx, aes(fill = var))
ggplot() +
geom_sf(data = gridx, aes(fill = var))
gridx
geom_sf(data = gridx, aes(fill = get(var))
ggplot() +
geom_sf(data = gridx, aes(fill = get(var)))
ggplot() +
geom_sf(data = gridx, aes(fill = get(var))) +
geom_point(data = gridy, aes(col = get(var)))
ggplot() +
geom_sf(data = gridx, aes(fill = get(var))) +
geom_sf(data = gridy, aes(col = get(var)))
gridx
gridy
bb <- c(apply(rbind(st_bbox(gridx), st_bbox(gridy))[,1:2], 2, min),
apply(rbind(st_bbox(gridx), st_bbox(gridy))[,3:4], 2, max)) %>%
st_bbox(crs = st_crs(gridx))
bb
vars <- paste0(var, c(".x", ".y"))
grid <- st_make_grid(bb, cellsize = gridmapX$lx_ly)
grid
union(gridx$i, gridy$i)
ies <- union(gridx$i, gridy$i)
grid %>%
as.data.table
grid %>%
as.data.table %>%
.[, i:= .I]
grid %>%
as.data.table %>%
.[, i:= .I] %>%
.[i %in% ies]
ies
ies %>% uniqueN()
grid %>%
as.data.table %>%
.[, i:= .I] %>%
.[i %in% ies] %>%
merge(st_drop_geometry(gridx), all = T)
grid %>%
as.data.table %>%
.[, i:= .I] %>%
.[i %in% ies] %>%
merge(st_drop_geometry(gridx), all = T) %>%
merge(st_drop_geometry(gridy), all = T)
grid %>%
as.data.table %>%
.[, i:= .I] %>%
.[i %in% ies] %>%
merge(st_drop_geometry(gridx), all = T) %>%
merge(st_drop_geometry(gridy), all = T) %>%
.[, (setdiff(names(.), "geometry")) := lapply(.SD, \(x) nafill(x, fill = 0)), .SDcols = setdiff(names(.), "geometry")] %>%
.[]
grid <- grid %>%
as.data.table %>%
.[, i:= .I] %>%
.[i %in% ies] %>%
merge(st_drop_geometry(gridx), all = T) %>%
merge(st_drop_geometry(gridy), all = T) %>%
.[, (setdiff(names(.), "geometry")) := lapply(.SD, \(x) nafill(x, fill = 0)), .SDcols = setdiff(names(.), "geometry")] %>%
.[]
grid
ggplot() +
geom_sf(data = grid, aes(fill = nivel_edu_alto.x))
grid
grid <- grid %>%
as.data.table %>%
.[, i:= .I] %>%
.[i %in% ies] %>%
merge(st_drop_geometry(gridx), all = T) %>%
merge(st_drop_geometry(gridy), all = T) %>%
.[, (setdiff(names(.), "geometry")) := lapply(.SD, \(x) nafill(x, fill = 0)), .SDcols = setdiff(names(.), "geometry")] %>%
st_as_sf()
grid
vars <- paste0(var, c(".x", ".y"))
grid <- st_make_grid(bb, cellsize = gridmapX$lx_ly)
ies <- union(gridx$i, gridy$i)
grid <- grid %>%
as.data.table %>%
.[, i:= .I] %>%
.[i %in% ies] %>%
merge(st_drop_geometry(gridx), all = T) %>%
merge(st_drop_geometry(gridy), all = T) %>%
.[, (setdiff(names(.), "geometry")) := lapply(.SD, \(x) nafill(x, fill = 0)), .SDcols = setdiff(names(.), "geometry")] %>%
st_as_sf()
ggplot() +
geom_sf(data = grid, aes(fill = nivel_edu_alto.x))
grid
ggplot() +
geom_sf_text(data = gridx, aes(label = id))
ggplot() +
geom_sf_text(data = gridx, aes(label = i))
lx <- 100
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
data(input)
data(input1985)
input1985 <- st_transform(input1985, crs=32721)
lx <- 100
vars <- c("nivel_edu_alto", "nivel_edu_bajo")
data(input)
data(input1985)
input1985 <- st_transform(input1985, crs=32721)
bb <- st_bbox(input)
distribuido <- distribute(input, lx = lx, vars = vars)
distribuido1985 <- distribute(input1985, lx = lx, vars = vars, bbox = bb)
diferencia <- diff_grid(distribuido, distribuido1985, var = vars[1])
plot(diferencia)
distribuido <- distribute(input, lx = lx, vars = vars, bbox = bb)
distribuido1985 <- distribute(input1985, lx = lx, vars = vars, bbox = bb)
diferencia <- diff_grid(distribuido, distribuido1985, var = vars[1])
plot(diferencia)
diferencia2 <- diff_grid(distribuido1985, distribuido, var = vars[1])
plot(diferencia2)
